Python execution in Image
Deploy both MySQL and Python images on Azure (separately or as a single package), and access the Webservice from local machine
Enhance functionality to add Log tables
Integrate with an ADF and ADB ETL pipeline

Enhance and refine Data Model and Core Functionality
Enhance UI/ UX
Integrate with an Airflow and Snowflake pipeline



============================================================================================================================================================


http://localhost:8501

SQLAlchemy==2.0.30
streamlit==1.33.0
numpy==1.26.4
pandas==2.2.2
mysql-connector-python==8.4.0
mysqlclient==2.2.4

__pycache__
.gitignore
secrets.toml
todo.txt
Dockerfile


    # import mysql.connector
    # mydb = mysql.connector.connect(host="localhost",port = "33061",user="app_devlpr",password="D3v1p%P$wd",database="abc_frmwrk_db")
    # mycursor = mydb.cursor()
    # mycursor.execute("select * from ABC_SUBJECT_AREA_MST")
    # result = mycursor.fetchall()
    # st.write(result)


# docker run --name abc_frmwrk_db --network abcnetwork --network-alias abc_mysql_host -e MYSQL_ROOT_PASSWORD=Pa$$W0rd -p 3306:3306 --expose 3306 -d mysql:latest

# docker pull mysql
# docker network create abcnetwork
# docker run --name abc_frmwrk_db -e MYSQL_ROOT_PASSWORD=Pa$$W0rd -p 3306:3306 --expose 3306 -d mysql:latest
# docker exec -it 69cfea69d24d14bb8869e5e35f0dcba46aaa084c3088aaee24cd36d2d5d2844b mkdir app
# docker cp ./db_script/ 69cfea69d24d14bb8869e5e35f0dcba46aaa084c3088aaee24cd36d2d5d2844b:/app/
# docker exec -it 69cfea69d24d14bb8869e5e35f0dcba46aaa084c3088aaee24cd36d2d5d2844b mysql -u root -p
# source /app/db_script/db_setup.sql
# source /app/db_script/table_ddl.sql
# source /app/db_script/stored_procs.sql



# docker build -t py_strmlit .
# docker run -p 8501:8501 --name abc_frmwrk_ui py_strmlit